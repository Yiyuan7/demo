{"id":"node_modules/robotjs/index.js","dependencies":[{"name":"/Users/yiyuanfeng/Desktop/Cornell/s3/interctive device/demos/package.json","includedInParent":true,"mtime":1542263875894},{"name":"/Users/yiyuanfeng/Desktop/Cornell/s3/interctive device/demos/.babelrc","includedInParent":true,"mtime":1541524803406},{"name":"/Users/yiyuanfeng/Desktop/Cornell/s3/interctive device/demos/node_modules/robotjs/package.json","includedInParent":true,"mtime":1542263867982},{"name":"./build/Release/robotjs.node","loc":{"line":1,"column":22},"parent":"/Users/yiyuanfeng/Desktop/Cornell/s3/interctive device/demos/node_modules/robotjs/index.js","resolved":"/Users/yiyuanfeng/Desktop/Cornell/s3/interctive device/demos/node_modules/robotjs/build/Release/robotjs.node"}],"generated":{"js":"var robotjs = require('./build/Release/robotjs.node');\n\nmodule.exports = robotjs;\n\nmodule.exports.screen = {};\n\nfunction bitmap(width, height, byteWidth, bitsPerPixel, bytesPerPixel, image) \n{\n    this.width = width;\n    this.height = height;\n    this.byteWidth = byteWidth;\n    this.bitsPerPixel = bitsPerPixel;\n    this.bytesPerPixel = bytesPerPixel;\n    this.image = image;\n\n    this.colorAt = function(x, y)\n    {\n        return robotjs.getColor(this, x, y);\n    };\n\n}\n\nmodule.exports.screen.capture = function(x, y, width, height)\n{\n    //If coords have been passed, use them.\n    if (typeof x !== \"undefined\" && typeof y !== \"undefined\" && typeof width !== \"undefined\" && typeof height !== \"undefined\")\n    {\n        b = robotjs.captureScreen(x, y, width, height);\n    }\n    else \n    {\n        b = robotjs.captureScreen();\n    }\n\n    return new bitmap(b.width, b.height, b.byteWidth, b.bitsPerPixel, b.bytesPerPixel, b.image);\n};\n","map":{"mappings":[{"source":"node_modules/robotjs/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/robotjs/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/robotjs/index.js":"var robotjs = require('./build/Release/robotjs.node');\n\nmodule.exports = robotjs;\n\nmodule.exports.screen = {};\n\nfunction bitmap(width, height, byteWidth, bitsPerPixel, bytesPerPixel, image) \n{\n    this.width = width;\n    this.height = height;\n    this.byteWidth = byteWidth;\n    this.bitsPerPixel = bitsPerPixel;\n    this.bytesPerPixel = bytesPerPixel;\n    this.image = image;\n\n    this.colorAt = function(x, y)\n    {\n        return robotjs.getColor(this, x, y);\n    };\n\n}\n\nmodule.exports.screen.capture = function(x, y, width, height)\n{\n    //If coords have been passed, use them.\n    if (typeof x !== \"undefined\" && typeof y !== \"undefined\" && typeof width !== \"undefined\" && typeof height !== \"undefined\")\n    {\n        b = robotjs.captureScreen(x, y, width, height);\n    }\n    else \n    {\n        b = robotjs.captureScreen();\n    }\n\n    return new bitmap(b.width, b.height, b.byteWidth, b.bitsPerPixel, b.bytesPerPixel, b.image);\n};\n"},"lineCount":37}},"hash":"7190abe4e142e5fa5c1af9a6ecb31b0b","cacheData":{"env":{}}}